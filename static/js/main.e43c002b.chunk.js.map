{"version":3,"sources":["actions/index.js","components/home/Home.js","components/navbar/NavBar.js","components/characters/Characters.js","components/characterDetails/CharacterDetail.js","components/episodes/Episodes.js","components/episodeDetail/EpisodeDetail.js","App.js","reportWebVitals.js","reducers/index.js","store/index.js","index.js"],"names":["ADD_QUOTE","GET_CHARACTER_DETAIL","EMPTY_CHARACTER_DETAIL","GET_CHARACTERS","GET_EPISODES","EMPTY_EPISODE_DETAIL","GET_EPISODE_DETAIL","connect","state","dispatch","addQuote","fetch","then","r","json","type","payload","props","useEffect","quote","a","className","author","Navbar","to","getCharacters","query","getCharactersEffect","useState","input","setInput","placeholder","onChange","e","target","value","handleInput","characters","map","character","char_id","name","getCharacterDetail","id","emptyCharacterDetail","num","useParams","characterDetail","birthday","occupation","join","status","src","img","alt","width","height","getEpisodes","response","getEpisodeEffect","episodes","filter","ep","series","episode_id","title","getEpisodeDetail","emptyEpisodeDetail","episodesDetail","season","episode","air_date","App","path","component","NavBar","exact","Home","Characters","CharacterDetail","Episodes","EpisodeDetail","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","action","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e43c002b.chunk.js","sourcesContent":["export const ADD_QUOTE = \"ADD_QUOTE\";\n\nexport const GET_CHARACTER_DETAIL = 'GET_CHARACTER_DETAIL';\n\nexport const EMPTY_CHARACTER_DETAIL = \"EMPTY_CHARACTER_DETAIL\"\n\nexport const GET_CHARACTERS = 'GET_CHARACTERS';\n\nexport const GET_EPISODES = 'GET_EPISODES';\n\nexport const EMPTY_EPISODE_DETAIL = 'EMPTY_EPISODE_DETAIL';\n\nexport const GET_EPISODE_DETAIL = 'GET_EPISODE_DETAIL';\n\n//====================================//\n\nexport function addQuote() {\n    return function(dispatch){\n        return fetch(`https://www.breakingbadapi.com/api/quote/random`)\n        .then(r => r.json())\n        .then(json => {\n            dispatch({\n                type: ADD_QUOTE,\n                payload: json\n            })\n        })\n    }\n}\n\n//====================================//\n\nexport function getCharacters(query) {\n    return function(dispatch){\n        return fetch(`https://www.breakingbadapi.com/api/characters?name=${query ? query : \"\" }`)\n        .then(r => r.json())\n        .then(json => {\n            dispatch({\n                type: GET_CHARACTERS,\n                payload: json\n            })\n        })\n    }\n}\n\n//===================================//\nexport function getCharacterDetail(id) {\n    return function(dispatch){\n        return fetch(`https://www.breakingbadapi.com/api/characters/${id}`)\n        .then(r => r.json())\n        .then(json => {\n            dispatch({\n                type:  GET_CHARACTER_DETAIL,\n                payload: json[0],\n            })\n        })\n    }\n}\n//====================================//\n\nexport function emptyCharacterDetail(num) {\n    return {\n        type: EMPTY_CHARACTER_DETAIL,\n      }\n}\n//====================================//\nexport function getEpisodes() {\n    return function (dispatch) {\n        return fetch(\"https://www.breakingbadapi.com/api/episodes\")\n          .then((response) => response.json())\n          .then((json) => {\n            dispatch({\n              type: GET_EPISODES,\n              payload: json,\n            });\n          });\n      };\n}\n//====================================//\n\nexport function emptyEpisodeDetail(num) {\n    return{\n        type: 'EMPTY_EPISODE_DETAIL'\n    }\n}\n//====================================//\n\nexport function getEpisodeDetail(id) {\n    return function(dispatch){\n        return fetch(`https://www.breakingbadapi.com/api/episodes/${id}`)\n        .then(r => r.json())\n        .then(json => {\n            dispatch({\n                type:  GET_EPISODE_DETAIL,\n                payload: json[0],\n            })\n        })\n    }\n}","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { addQuote } from '../../actions';\nimport './Home.css';\n\n\n\nconst Home = (props) => {\n  useEffect(()=>{\n    const quote = async () => {\n      await props.addQuote()\n    }\n    quote();\n  },[])\n  \n  return (\n    <div className='Home'>\n      {props.quote[0] && props.quote[0].quote}\n      {props.quote[0] && props.quote[0].author}\n      <div  className='Home__logo'/>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state){\n  return{\n    ...state,\n  };\n}\n\nfunction mapDispatchToProps(dispatch){\n  return{\n    addQuote: () => dispatch(addQuote()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React from 'react';\nimport './NavBar.css'\nimport { Link } from 'react-router-dom';\n\nconst Navbar = () => {\n  return (\n    <div className='navbar'>\n      <Link to=\"/\" > Home </Link>\n      <Link to=\"/characters\" >Charaters</Link>\n      <Link to=\"/episodes\" >Episodes</Link>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React, { useEffect, useState } from 'react';\nimport { getCharacters } from '../../actions';\nimport { connect } from 'react-redux';\nimport './Characters.css'\nimport { Link } from 'react-router-dom';\n\n\nconst Characters = (props) => {\n  const getCharactersEffect = async () => {\n    await props.getCharacters();\n  };\n  const [input, setInput] = useState(\"\");\n\n  useEffect(() => {\n    getCharactersEffect()\n  }, [])\n  useEffect(() =>{\n    props.getCharacters(input);\n  }, [input])\n\n  const handleInput = (e) => {\n    setInput(e.target.value);\n  };\n\n  return (\n    <div className='Characters'>\n      <form>\n      <input type='text' placeholder='Search Characters' onChange={(e) => handleInput(e)} />\n      </form>\n      <div>\n      {props.characters &&\n        props.characters.map((character) => {\n          return (\n            <div className=\"Characters__list\" key={character.char_id}>\n              <Link to={`/characters/${character.char_id}`}>\n                {character.name}\n              </Link>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\n\n\nfunction mapStateToProps(state) {\n  return {\n    ...state\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getCharacters: (query) => dispatch(getCharacters(query))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Characters);\n","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCharacterDetail, emptyCharacterDetail } from '../../actions';\nimport { connect } from 'react-redux';\nimport './CharacterDetail.css';\n\nconst CharacterDetail = (props) => {\n  const {id} = useParams();\n\n  useEffect(() =>{\n    props.getCharacterDetail(id);\n    return function cleanUp(){\n      props.emptyCharacterDetail();\n    }\n  }, [])\n  \n    return (\n      <div className='CharacterDetail'>\n       <h2>Nombre: {props.characterDetail.name}</h2>\n       <h3>Cumpleaños: {props.characterDetail.birthday}</h3>\n       <h3>Ocupación: {props.characterDetail.occupation?.join(\", \")}</h3>\n       <h3>Status: {props.characterDetail.status} </h3>\n       <img src={props.characterDetail.img} alt=\"\" width=\"200px\" height=\"250px\"/>\n      </div>\n    );\n  }\n  \n  const mapStateToProps = (state) => {\n    return {\n      ...state,\n    }\n  }\n\nexport default connect(mapStateToProps, { getCharacterDetail, emptyCharacterDetail }) (CharacterDetail);\n\n","import React, { useEffect, useState } from 'react';\nimport { getEpisodes } from '../../actions';\nimport { connect } from 'react-redux';\nimport './Episodes.css'\nimport { Link } from 'react-router-dom';\n\nconst Episodes = (props) => {\n  \n  useEffect(()=>{\n    const getEpisodeEffect = async()=>{\n    await props.getEpisodes();\n  }\n    getEpisodeEffect ();\n  },[])\n  \n  return (\n    <div className='Episodes'>\n      Episodes\n      { props.episodes?.filter((ep)=>ep.series === \"Breaking Bad\")\n      .map((ep)=>{\n        return(\n          <div className='Episodes__list' key={ep.episode_id}>\n            <Link to={`/episodes/${ep.episode_id}`} >\n              {ep.title}\n            </Link>\n          </div>\n        )\n      })\n      }\n    </div>\n  );\n}\nfunction mapStateToProps(state) {\n  return {\n    ...state\n  }\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getEpisodes: () => dispatch(getEpisodes())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Episodes);\n","import React,{useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { getEpisodeDetail, emptyEpisodeDetail } from '../../actions';\nimport './EpisodeDetail.css'\nconst EpisodeDetail = (props) => {\n  const {id} = useParams();\n\n  useEffect(() =>{\n    props.getEpisodeDetail(id);\n    return function cleanUp(){\n      props.emptyEpisodeDetail();\n    }\n  }, [])\n  \n  return (\n    <div className='EpisodeDetail-Container'>\n      EpisodeDetail\n      <h2>Titulo: {props.episodesDetail.title}</h2>\n      <h3>Temporada: {props.episodesDetail.season}</h3>\n      <h3>Episodio: {props.episodesDetail.episode}</h3>\n      <h3>Fecha de Emision: {props.episodesDetail.air_date}</h3>\n      <h3>Personajes: {props.episodesDetail.characters?.join(\", \")}</h3>\n    </div>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    ...state,\n  }\n}\n\nexport default  connect(mapStateToProps, {getEpisodeDetail, emptyEpisodeDetail}) (EpisodeDetail);\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport Home from './components/home/Home';\nimport NavBar from './components/navbar/NavBar';\nimport Characters from './components/characters/Characters';\nimport CharacterDetail from './components/characterDetails/CharacterDetail';\nimport Episodes from './components/episodes/Episodes';\nimport EpisodeDetail from './components/episodeDetail/EpisodeDetail'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Route path=\"/\" component={NavBar} />\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/characters\" component={Characters} />\n      <Route exact path=\"/characters/:id\" component={CharacterDetail} />\n      <Route exact path=\"/episodes\" component={Episodes} />\n      <Route exact path=\"/episodes/:id\" component={EpisodeDetail} />\n    </BrowserRouter>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n    ADD_QUOTE,\n    GET_CHARACTERS,\n    GET_CHARACTER_DETAIL,\n    GET_EPISODES,\n    EMPTY_CHARACTER_DETAIL,\n    GET_EPISODE_DETAIL,\n    EMPTY_EPISODE_DETAIL\n}\n    from \"../actions\";\n\n//==== Setear Estado Global Inicial ======//\n\nconst initialState = {\n    quote: {},\n    characters:[],\n    characterDetail: {},\n    episodes:[],\n    episodesDetail:{},\n}\n\n//==== Setear Reducers ======//\nfunction rootReducer(state = initialState, action) {\n    switch (action.type) {\n        case ADD_QUOTE:\n          return {\n            ...state,\n            quote: action.payload,\n          };\n        case GET_CHARACTERS:\n          return {\n            ...state,\n            characters: action.payload,\n          };\n        case GET_CHARACTER_DETAIL:\n          return {\n            ...state,\n            characterDetail: action.payload,\n          };\n        case EMPTY_CHARACTER_DETAIL:\n          return {\n            ...state,\n            characterDetail: {},\n          };\n        case GET_EPISODES:\n          return {\n            ...state,\n            episodes: action.payload,\n          };\n        case GET_EPISODE_DETAIL:\n          return {\n            ...state,\n            episodesDetail: action.payload,\n          };\n        case EMPTY_EPISODE_DETAIL:\n          return {\n            ...state,\n            episodesDetail: {},\n          };\n        default:\n    return state;\n    }\n}\n\nexport default rootReducer;\n","import {createStore, applyMiddleware} from 'redux';\nimport rootReducer from '../reducers';\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(\n    rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n    applyMiddleware(thunk)\n)\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\n\n\nReactDOM.render(\n  <Provider store = {store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}